{"version":3,"file":"static/webpack/static/development/pages/index.js.69f611b5b207817e9e00.hot-update.js","sources":["webpack:///./components/PlxMenu.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Plx from 'react-plx'\nimport MenuHeader from './menu/MenuHeader.js'\nimport MenuAccordion from './menu/MenuAccordion.js'\n\nconst plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px',\n}\n\nexport default class PlxMenu extends Component {\n  state = { \n    activeItem: 'Bio',\n    activeIndex: '' \n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.handleScroll, false)\n  }\n\n  handleItemClick = (e, { name }) => {\n    let element = document.getElementsByClassName(name)[0];\n    element.scrollIntoView({behavior: 'smooth'});\n  }\n\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleScroll = () => {\n    let introNode = { node:document.getElementsByClassName('Intro'), name:'Intro' }\n    let animalNode = { node:document.getElementsByClassName('Animals'), name:'Animals' }\n    let programmingNode = { node:document.getElementsByClassName('Programming'), name:'Programming' }\n    let projectsNode = { node:document.getElementsByClassName('Projects'), name:'Projects' }\n    let connectNode = { node:document.getElementsByClassName('Connect'), name:'Connect' }\n    let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode]\n\n    menuArray.map(e => {\n      let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight \n      if(e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize ) {\n        this.setState({ activeItem: e.name })\n        if(e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming'){\n          this.setState({ activeIndex: 0 })\n        }\n      }\n    })\n\n    //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n    //if(currentScroll == elementScroll) {\n    //  this.setState({ activeItem: name });\n    //}\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { activeIndex } = this.state\n\n    return (\n      <Plx\n        className='dynMenu'\n        style={plxMenu}\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 500,\n            duration: 300,\n            name: 'first',\n            properties: [\n              {\n                startValue: 0,\n                endValue: -250,\n                property: 'translateX',\n              },\n              {\n                startValue: 0,\n                endValue: 1,\n                property: 'opacity'\n              }\n            ],\n          },\n        ] }\n      >\n        <MenuHeader/>\n        <MenuAccordion \n          handleItemClick={this.handleItemClick}\n          handleAccordionClick={this.handleAccordionClick}\n          activeItem={activeItem}\n          activeIndex={activeIndex}\n        />\n      </Plx>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;AAxCA;AACA;AACA;;;AAuCA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAVA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AArFA;AACA;;;;;A","sourceRoot":""}