{"version":3,"file":"static/webpack/static/development/pages/index.js.c23720c26d262e40dfe3.hot-update.js","sources":["webpack:///./components/Menu.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Accordion, Menu, Image, Segment } from 'semantic-ui-react'\n\nconst menuHeaderStyle = {\n  backgroundColor: 'black',\n  color: 'white',\n  textAlign: 'center',\n  fontStyle: 'italic'\n}\n\nexport default class MenuVert extends Component {\n  state = { \n    activeItem: 'Bio',\n    activeIndex: '' \n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.handleScroll, false)\n  }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n    let element = document.getElementsByClassName(name)[0];\n    element.scrollIntoView({behavior: 'smooth'});\n  }\n\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  \n  handleScroll = () => {\n    let introNode = { node:document.getElementsByClassName('Intro'), name:'Intro' }\n    let animalNode = { node:document.getElementsByClassName('Animals'), name:'Animals' }\n    let programmingNode = { node:document.getElementsByClassName('Programming'), name:'Programming' }\n    let projectsNode = { node:document.getElementsByClassName('Projects'), name:'Projects' }\n    let connectNode = { node:document.getElementsByClassName('Connect'), name:'Connect' }\n    let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode]\n\n    menuArray.map(e => {\n      let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight \n      if(e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming'){\n        this.setState({ activeIndex: 0 })\n      }\n      if(e.node[0].offsetTop <= window.scrollY && window.scrollY <= nodeScrollSize ) {\n        this.setState({ activeItem: e.name })\n      }\n    })\n\n    //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n    //if(currentScroll == elementScroll) {\n    //  this.setState({ activeItem: name });\n    //}\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { activeIndex } = this.state\n\n    const BioContent = (\n      <Menu.Menu>\n        <Menu.Item\n          name='Intro'\n          active={activeItem === 'Intro'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='Animals'\n          active={activeItem === 'Animals'}\n          onClick={this.handleItemClick}\n        />\n        <Menu.Item\n          name='Programming'\n          active={activeItem === 'Programming'}\n          onClick={this.handleItemClick}\n        />\n      </Menu.Menu>\n    )\n\n    return (\n      <div>\n        <Segment style={menuHeaderStyle}>\n          <Image src='/web-portfolio-png/name.png' size='small' centered/>\n          <p>( Hwang, Jun-Hyun )</p>\n        </Segment>\n        \n        <Accordion as={Menu} pointing secondary vertical fluid inverted>\n            <Accordion.Title\n              as={Menu.Item}\n              content='Bio'\n              active={activeIndex === 0}\n              index={0}\n              onClick={this.handleAccordionClick}\n            />\n            <Accordion.Content active={activeIndex === 0} content={BioContent} />\n          <Menu.Item\n            name='Projects'\n            active={activeItem === 'Projects'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='Connect'\n            active={activeItem === 'Connect'}\n            onClick={this.handleItemClick}\n          />\n        </Accordion>\n        <style jsx global>\n          {`\n            .ui.secondary.vertical.pointing.menu .item {\n              border-left-style: solid;\n              border-left-width: 2px;\n              border-left-color: grey;\n              border-right-style: none;\n              border-right-width: 0;\n              border-right-color: none;\n            }\n            .ui.secondary.vertical.pointing.menu {\n              border-left-width: 2px;\n              border-left-style: solid;\n              border-left-color: rgba(34,36,38,.15);\n              border-right-width: 0;\n              border-right-style: none;\n              border-right-color: none;\n            }\n            .ui.secondary.vertical.pointing.menu .item {\n              margin: 0 0 0 -2px;\n            }\n            .ui.vertical.menu .item>i.icon {\n              transform: scaleX(-1);\n            }\n            .ui.accordion:not(.styled) .accordion .title~.content:not(.ui), .ui.accordion:not(.styled) .title~.content:not(.ui) {\n              padding: 0;\n              text-indent: 18px;\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;AA1CA;AACA;AACA;;;AAypBA;AAAA;AAAA;AA0DA;;;;AApIA;AACA;;;;;A","sourceRoot":""}