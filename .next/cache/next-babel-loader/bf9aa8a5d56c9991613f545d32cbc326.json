{"ast":null,"code":"var _jsxFileName = \"/Users/junhwang/Documents/portfolio_web/jun-portfolio/components/PlxMenu.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Plx from 'react-plx';\nimport MenuHeader from './menu/MenuHeader.js';\nimport MenuAccordion from './menu/MenuAccordion.js';\nconst plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px'\n};\nexport default class PlxMenu extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      activeItem: 'Bio',\n      activeIndex: ''\n    });\n\n    _defineProperty(this, \"handleItemClick\", (e, {\n      name\n    }) => {\n      let element = document.getElementsByClassName(name)[0];\n      element.scrollIntoView({\n        behavior: 'smooth'\n      });\n    });\n\n    _defineProperty(this, \"handleAccordionClick\", (e, titleProps) => {\n      const {\n        index\n      } = titleProps;\n      const {\n        activeIndex\n      } = this.state;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    });\n\n    _defineProperty(this, \"handleScroll\", () => {\n      let introNode = {\n        node: document.getElementsByClassName('Intro'),\n        name: 'Intro'\n      };\n      let animalNode = {\n        node: document.getElementsByClassName('Animals'),\n        name: 'Animals'\n      };\n      let programmingNode = {\n        node: document.getElementsByClassName('Programming'),\n        name: 'Programming'\n      };\n      let projectsNode = {\n        node: document.getElementsByClassName('Projects'),\n        name: 'Projects'\n      };\n      let connectNode = {\n        node: document.getElementsByClassName('Connect'),\n        name: 'Connect'\n      };\n      let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode];\n      menuArray.map(e => {\n        let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight;\n\n        if (e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize) {\n          this.setState({\n            activeItem: e.name\n          });\n\n          if (e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming') {\n            this.setState({\n              activeIndex: 0\n            });\n          }\n        }\n      }); //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n      //if(currentScroll == elementScroll) {\n      //  this.setState({ activeItem: name });\n      //}\n    });\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll, false);\n  }\n\n  render() {\n    const {\n      activeItem\n    } = this.state;\n    const {\n      activeIndex\n    } = this.state;\n    return __jsx(Plx, {\n      className: \"dynMenu\",\n      style: plxMenu,\n      animateWhenNotInViewport: true,\n      parallaxData: [{\n        start: 500,\n        duration: 300,\n        name: 'first',\n        properties: [{\n          startValue: 0,\n          endValue: -250,\n          property: 'translateX'\n        }, {\n          startValue: 0,\n          endValue: 1,\n          property: 'opacity'\n        }]\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, __jsx(MenuHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), __jsx(MenuAccordion, {\n      handleItemClick: this.handleItemClick,\n      handleAccordionClick: this.handleAccordionClick,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/junhwang/Documents/portfolio_web/jun-portfolio/components/PlxMenu.js"],"names":["React","Component","Plx","MenuHeader","MenuAccordion","plxMenu","opacity","position","right","PlxMenu","activeItem","activeIndex","e","name","element","document","getElementsByClassName","scrollIntoView","behavior","titleProps","index","state","newIndex","setState","introNode","node","animalNode","programmingNode","projectsNode","connectNode","menuArray","map","nodeScrollSize","offsetTop","scrollHeight","window","scrollY","componentDidMount","addEventListener","handleScroll","render","start","duration","properties","startValue","endValue","property","handleItemClick","handleAccordionClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Plx from 'react-plx'\nimport MenuHeader from './menu/MenuHeader.js'\nimport MenuAccordion from './menu/MenuAccordion.js'\n\nconst plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px',\n}\n\nexport default class PlxMenu extends Component {\n  state = { \n    activeItem: 'Bio',\n    activeIndex: '' \n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.handleScroll, false)\n  }\n\n  handleItemClick = (e, { name }) => {\n    let element = document.getElementsByClassName(name)[0];\n    element.scrollIntoView({behavior: 'smooth'});\n  }\n\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleScroll = () => {\n    let introNode = { node:document.getElementsByClassName('Intro'), name:'Intro' }\n    let animalNode = { node:document.getElementsByClassName('Animals'), name:'Animals' }\n    let programmingNode = { node:document.getElementsByClassName('Programming'), name:'Programming' }\n    let projectsNode = { node:document.getElementsByClassName('Projects'), name:'Projects' }\n    let connectNode = { node:document.getElementsByClassName('Connect'), name:'Connect' }\n    let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode]\n\n    menuArray.map(e => {\n      let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight \n      if(e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize ) {\n        this.setState({ activeItem: e.name })\n        if(e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming'){\n          this.setState({ activeIndex: 0 })\n        }\n      }\n    })\n\n    //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n    //if(currentScroll == elementScroll) {\n    //  this.setState({ activeItem: name });\n    //}\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { activeIndex } = this.state\n\n    return (\n      <Plx\n        className='dynMenu'\n        style={plxMenu}\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 500,\n            duration: 300,\n            name: 'first',\n            properties: [\n              {\n                startValue: 0,\n                endValue: -250,\n                property: 'translateX',\n              },\n              {\n                startValue: 0,\n                endValue: 1,\n                property: 'opacity'\n              }\n            ],\n          },\n        ] }\n      >\n        <MenuHeader/>\n        <MenuAccordion \n          handleItemClick={this.handleItemClick}\n          handleAccordionClick={this.handleAccordionClick}\n          activeItem={activeItem}\n          activeIndex={activeIndex}\n        />\n      </Plx>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}