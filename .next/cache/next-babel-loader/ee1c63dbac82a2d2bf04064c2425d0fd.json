{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/junhwang/Documents/portfolio_web/jun-portfolio/components/PlxMenu.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Plx from 'react-plx';\nimport MenuHeader from './menu/MenuHeader.js';\nimport MenuAccordion from './menu/MenuAccordion.js';\nvar plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px'\n};\n\nvar PlxMenu = /*#__PURE__*/function (_Component) {\n  _inherits(PlxMenu, _Component);\n\n  var _super = _createSuper(PlxMenu);\n\n  function PlxMenu() {\n    var _this;\n\n    _classCallCheck(this, PlxMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeItem: 'Bio',\n      activeIndex: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleItemClick\", function (e, _ref) {\n      var name = _ref.name;\n      var element = document.getElementsByClassName(name)[0];\n      element.scrollIntoView({\n        behavior: 'smooth'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAccordionClick\", function (e, titleProps) {\n      var index = titleProps.index;\n      var activeIndex = _this.state.activeIndex;\n      var newIndex = activeIndex === index ? -1 : index;\n\n      _this.setState({\n        activeIndex: newIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScroll\", function () {\n      var introNode = {\n        node: document.getElementsByClassName('Intro'),\n        name: 'Intro'\n      };\n      var animalNode = {\n        node: document.getElementsByClassName('Animals'),\n        name: 'Animals'\n      };\n      var programmingNode = {\n        node: document.getElementsByClassName('Programming'),\n        name: 'Programming'\n      };\n      var projectsNode = {\n        node: document.getElementsByClassName('Projects'),\n        name: 'Projects'\n      };\n      var connectNode = {\n        node: document.getElementsByClassName('Connect'),\n        name: 'Connect'\n      };\n      var menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode];\n      menuArray.map(function (e) {\n        var nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight;\n\n        if (e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize) {\n          _this.setState({\n            activeItem: e.name\n          });\n\n          if (e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming') {\n            _this.setState({\n              activeIndex: 0\n            });\n          }\n        }\n      }); //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n      //if(currentScroll == elementScroll) {\n      //  this.setState({ activeItem: name });\n      //}\n    });\n\n    return _this;\n  }\n\n  _createClass(PlxMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('scroll', this.handleScroll, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var activeItem = this.state.activeItem;\n      var activeIndex = this.state.activeIndex;\n      return __jsx(Plx, {\n        className: \"dynMenu\",\n        style: plxMenu,\n        animateWhenNotInViewport: true,\n        parallaxData: [{\n          start: 1000,\n          duration: 300,\n          name: 'first',\n          properties: [{\n            startValue: 0,\n            endValue: -250,\n            property: 'translateX'\n          }, {\n            startValue: 0,\n            endValue: 1,\n            property: 'opacity'\n          }]\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, __jsx(MenuHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), __jsx(MenuAccordion, {\n        handleItemClick: this.handleItemClick,\n        handleAccordionClick: this.handleAccordionClick,\n        activeItem: activeItem,\n        activeIndex: activeIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PlxMenu;\n}(Component);\n\nexport { PlxMenu as default };","map":{"version":3,"sources":["/Users/junhwang/Documents/portfolio_web/jun-portfolio/components/PlxMenu.js"],"names":["React","Component","Plx","MenuHeader","MenuAccordion","plxMenu","opacity","position","right","PlxMenu","activeItem","activeIndex","e","name","element","document","getElementsByClassName","scrollIntoView","behavior","titleProps","index","state","newIndex","setState","introNode","node","animalNode","programmingNode","projectsNode","connectNode","menuArray","map","nodeScrollSize","offsetTop","scrollHeight","window","scrollY","addEventListener","handleScroll","start","duration","properties","startValue","endValue","property","handleItemClick","handleAccordionClick"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Plx from 'react-plx'\nimport MenuHeader from './menu/MenuHeader.js'\nimport MenuAccordion from './menu/MenuAccordion.js'\n\nconst plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px',\n}\n\nexport default class PlxMenu extends Component {\n  state = { \n    activeItem: 'Bio',\n    activeIndex: '' \n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.handleScroll, false)\n  }\n\n  handleItemClick = (e, { name }) => {\n    let element = document.getElementsByClassName(name)[0];\n    element.scrollIntoView({behavior: 'smooth'});\n  }\n\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleScroll = () => {\n    let introNode = { node:document.getElementsByClassName('Intro'), name:'Intro' }\n    let animalNode = { node:document.getElementsByClassName('Animals'), name:'Animals' }\n    let programmingNode = { node:document.getElementsByClassName('Programming'), name:'Programming' }\n    let projectsNode = { node:document.getElementsByClassName('Projects'), name:'Projects' }\n    let connectNode = { node:document.getElementsByClassName('Connect'), name:'Connect' }\n    let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode]\n\n    menuArray.map(e => {\n      let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight \n      if(e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize ) {\n        this.setState({ activeItem: e.name })\n        if(e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming'){\n          this.setState({ activeIndex: 0 })\n        }\n      }\n    })\n\n    //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n    //if(currentScroll == elementScroll) {\n    //  this.setState({ activeItem: name });\n    //}\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { activeIndex } = this.state\n\n    return (\n      <Plx\n        className='dynMenu'\n        style={plxMenu}\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 1000,\n            duration: 300,\n            name: 'first',\n            properties: [\n              {\n                startValue: 0,\n                endValue: -250,\n                property: 'translateX',\n              },\n              {\n                startValue: 0,\n                endValue: 1,\n                property: 'opacity'\n              }\n            ],\n          },\n        ] }\n      >\n        <MenuHeader/>\n        <MenuAccordion \n          handleItemClick={this.handleItemClick}\n          handleAccordionClick={this.handleAccordionClick}\n          activeItem={activeItem}\n          activeIndex={activeIndex}\n        />\n      </Plx>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}