{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/IndexGrid.js","webpack:///./components/PlxMenu.js","webpack:///./components/menu/MenuAccordion.js","webpack:///./components/menu/MenuHeader.js","webpack:///./pages/index.js","webpack:///external \"react\"","webpack:///external \"react-plx\"","webpack:///external \"semantic-ui-react\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react'\nimport { Grid, Image } from 'semantic-ui-react'\nimport PlxMenu from './PlxMenu'\n\nconst gridStyle = {\n  position: 'fixed',\n  right: 0,\n  top: '20vh',\n  width: '100%',\n  zIndex: 10\n}\n\nconst IndexGrid = () => (\n  <Grid verticalAlign='middle' columns={4} centered style={gridStyle}>\n    <Grid.Row>\n      <Grid.Column width={4}>\n      </Grid.Column>\n      <Grid.Column width={7}>\n      </Grid.Column>\n      <Grid.Column width={3}>\n        <PlxMenu/>\n      </Grid.Column>\n    </Grid.Row>\n  </Grid>\n)\n\nexport default IndexGrid\n","import React, { Component } from 'react'\nimport Plx from 'react-plx'\nimport MenuHeader from './menu/MenuHeader.js'\nimport MenuAccordion from './menu/MenuAccordion.js'\n\nconst plxMenu = {\n  opacity: 0,\n  position: 'relative',\n  right: '-250px',\n}\n\nexport default class PlxMenu extends Component {\n  state = { \n    activeItem: 'Bio',\n    activeIndex: '' \n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.handleScroll, false)\n  }\n\n  handleItemClick = (e, { name }) => {\n    let element = document.getElementsByClassName(name)[0];\n    element.scrollIntoView({behavior: 'smooth'});\n  }\n\n  handleAccordionClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleScroll = () => {\n    let introNode = { node:document.getElementsByClassName('Intro'), name:'Intro' }\n    let animalNode = { node:document.getElementsByClassName('Animals'), name:'Animals' }\n    let programmingNode = { node:document.getElementsByClassName('Programming'), name:'Programming' }\n    let projectsNode = { node:document.getElementsByClassName('Projects'), name:'Projects' }\n    let connectNode = { node:document.getElementsByClassName('Connect'), name:'Connect' }\n    let menuArray = [introNode, animalNode, programmingNode, projectsNode, connectNode]\n\n    menuArray.map(e => {\n      let nodeScrollSize = e.node[0].offsetTop + e.node[0].scrollHeight \n      if(e.node[0].offsetTop - 300 <= window.scrollY && window.scrollY <= nodeScrollSize ) {\n        this.setState({ activeItem: e.name })\n        if(e.name == 'Intro' || e.name == 'Animals' || e.name == 'Programming'){\n          this.setState({ activeIndex: 0 })\n        }\n      }\n    })\n\n    //let elementScroll = document.getElementsByClassName(name)[0].scrollTop\n    //if(currentScroll == elementScroll) {\n    //  this.setState({ activeItem: name });\n    //}\n  }\n\n  render() {\n    const { activeItem } = this.state\n    const { activeIndex } = this.state\n\n    return (\n      <Plx\n        className='dynMenu'\n        style={plxMenu}\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 1000,\n            duration: 300,\n            name: 'first',\n            properties: [\n              {\n                startValue: 0,\n                endValue: -250,\n                property: 'translateX',\n              },\n              {\n                startValue: 0,\n                endValue: 1,\n                property: 'opacity'\n              }\n            ],\n          },\n        ] }\n      >\n        <MenuHeader/>\n        <MenuAccordion \n          handleItemClick={this.handleItemClick}\n          handleAccordionClick={this.handleAccordionClick}\n          activeItem={activeItem}\n          activeIndex={activeIndex}\n        />\n      </Plx>\n    )\n  }\n}","import { Accordion, Menu, Segment } from 'semantic-ui-react'\n\nconst MenuAccordionStyle = {\n  backgroundColor: 'black'\n}\n\nconst BioContent = (props) => (\n  <Menu.Menu>\n    <Menu.Item\n      name='Intro'\n      active={props.activeItem === 'Intro'}\n      onClick={props.handleItemClick}\n    />\n    <Menu.Item\n      name='Animals'\n      active={props.activeItem === 'Animals'}\n      onClick={props.handleItemClick}\n    />\n    <Menu.Item\n      name='Programming'\n      active={props.activeItem === 'Programming'}\n      onClick={props.handleItemClick}\n    />\n  </Menu.Menu>\n)\n\nconst MenuAccordion = (props) => (\n  <Segment style={MenuAccordionStyle}>\n    <Accordion as={Menu} pointing secondary vertical fluid inverted>\n      <Accordion.Title\n        as={Menu.Item}\n        content='Bio'\n        active={props.activeIndex === 0}\n        index={0}\n        onClick={props.handleAccordionClick}\n      />\n      <Accordion.Content active={props.activeIndex === 0} content={BioContent(props)} />\n      <Menu.Item\n        name='Projects'\n        active={props.activeItem === 'Projects'}\n        onClick={props.handleItemClick}\n      />\n      <Menu.Item\n        name='Connect'\n        active={props.activeItem === 'Connect'}\n        onClick={props.handleItemClick}\n      />\n    </Accordion>\n    <style jsx global>\n    {`\n      .ui.secondary.vertical.pointing.menu .item {\n        border-left-style: solid;\n        border-left-width: 2px;\n        border-left-color: grey;\n        border-right-style: none;\n        border-right-width: 0;\n        border-right-color: none;\n      }\n      .ui.secondary.vertical.pointing.menu {\n        border-left-width: 2px;\n        border-left-style: solid;\n        border-left-color: rgba(34,36,38,.15);\n        border-right-width: 0;\n        border-right-style: none;\n        border-right-color: none;\n      }\n      .ui.secondary.vertical.pointing.menu .item {\n        margin: 0 0 0 -2px;\n      }\n      .ui.vertical.menu .item>i.icon {\n        transform: scaleX(-1);\n      }\n      .ui.accordion:not(.styled) .accordion .title~.content:not(.ui), .ui.accordion:not(.styled) .title~.content:not(.ui) {\n        padding: 0;\n        text-indent: 18px;\n      }\n      .ui.secondary.pointing.menu .dropdown.item:active, .ui.secondary.pointing.menu .link.item:active, .ui.secondary.pointing.menu a.item:active {\n        border-color: grey;\n      }\n    `}\n    </style>\n  </Segment>\n)\n\nexport default MenuAccordion;","import { Segment, Image } from 'semantic-ui-react'\n\nconst menuHeaderStyle = {\n  backgroundColor: 'black',\n  color: 'white',\n  textAlign: 'center',\n  fontStyle: 'italic',\n}\n\nconst MenuHeader = () => (\n  <Segment style={menuHeaderStyle}>\n    <Image src='/web-portfolio-png/name.png' size='small' centered/>\n    <p>( Hwang, Jun-Hyun )</p>\n  </Segment>\n  )\n\nexport default MenuHeader","import IndexGrid from '../components/IndexGrid';\nimport { useEffect, useRef } from 'react';\nimport Plx from 'react-plx'\nimport { \n  Container,\n  Segment,\n  Image,\n  Grid,\n } from 'semantic-ui-react';\n\nexport default function index () {\n\n  const docBodyStyle = {\n    height: '5000px'\n  }\n\n  const segIntroStyle = {\n    position: 'fixed',\n    width: '100%',\n    height: '100vh',\n    padding: '11em 0',\n    margin: '0',\n    color: 'white',\n    zIndex: 9\n  }\n\n  const segBgStyle = {\n    position: 'fixed',\n    width: '100%',\n    height: '100%',\n    margin: '0',\n    zIndex: 6,\n    backgroundColor: 'black',\n    opacity: 0\n  }\n\n  const imageStyle = {\n    position: 'fixed',\n    backgroundImage: \"url('web-portfolio-png/mainPic.jpg')\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    height: '100%',\n    width: '100%',\n    zIndex: 5,\n    borderRadius: 0,\n    border: 0,\n    boxSizing: 'content-box'\n  }\n\n  const blackBgStyle = {\n    position: 'fixed',\n    backgroundColor: 'black',\n    height: '100%',\n    width: '100%',\n    zIndex: 6,\n  }\n\n  const segAnimStyle = {\n    padding: '15em 0',\n    margin: '0',\n    backgroundColor: 'black',\n    color: 'white'\n  }\n\n  const segProgStyle = {\n    padding: '15em 0 22em',\n    margin: '0',\n    backgroundColor: 'black',\n    color: 'white'\n  }\n\n  return (\n    <div className='docBody' style={docBodyStyle}>\n\n      <Segment style={segIntroStyle} className='Intro' basic>\n        <Plx\n          className='introPlx'\n          animateWhenNotInViewport={ true }\n          parallaxData={ [\n            {\n              start: 500,\n              duration: 500,\n              name: 'introAnimation',\n              properties: [\n                {\n                  startValue: 1,\n                  endValue: 0,\n                  property: 'opacity'\n                },\n                {\n                  startValue: 0,\n                  endValue: -300,\n                  property: 'translateY'\n                }\n              ],\n            },\n          ] }\n        >\n          <Grid centered columns={3}>\n            <Grid.Row>\n              <Grid.Column width={6}>\n                <Container>\n                  <h1 style={{fontSize:'85px'}}>Hi! My name is Jun.</h1>\n                  <h4>\n                    Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                    ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n                    magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n                    ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n                    quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n                  </h4>\n                </Container>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Plx>\n      </Segment>\n      \n      <Plx\n        style={imageStyle}\n        className='segImageStyle'\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 1000,\n            duration: 300,\n            name: 'imgAnimation',\n            properties: [\n              {\n                startValue: 0,\n                endValue: -434,\n                property: 'translateX'\n              }\n            ],\n          },\n        ] }\n      >\n      </Plx>\n\n      <Plx\n        style={segBgStyle}\n        className='segBgStyle'\n        animateWhenNotInViewport={ true }\n        parallaxData={ [\n          {\n            start: 0,\n            duration: 500,\n            name: 'bgAnimation',\n            properties: [\n              {\n                startValue: 0,\n                endValue: 1,\n                property: 'opacity'\n              },\n              {\n                startValue: 0,\n                endValue: 300,\n                property: 'translateX'\n              }\n            ],\n          },\n        ] }\n      >\n      </Plx>\n\n      <IndexGrid/>\n\n      <Segment style={segAnimStyle} className='Animals' basic>\n        <Grid centered columns={3}>\n          <Grid.Row>\n            <Grid.Column width={4}>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Container>\n                <h1>Animals</h1>\n                <h4>\n                  Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                  ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n                  magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n                  ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n                  quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n                </h4>\n              </Container>\n            </Grid.Column>\n            <Grid.Column width={2}>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Segment style={segProgStyle} className='Programming' basic>\n        <Grid centered columns={3}>\n          <Grid.Row>\n            <Grid.Column width={4}>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Container>\n                <h1>Programming</h1>\n                <h4>\n                  Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                  ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n                  magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n                  ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n                  quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n                </h4>\n              </Container>\n            </Grid.Column>\n            <Grid.Column width={2}>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Segment style={segProgStyle} className='Projects' basic>\n        <Grid centered columns={3}>\n          <Grid.Row>\n            <Grid.Column width={4}>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Container>\n                <h1>Projects</h1>\n                <h4>\n                  Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                  ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n                  magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n                  ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n                  quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n                </h4>\n              </Container>\n            </Grid.Column>\n            <Grid.Column width={2}>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <Segment style={segProgStyle} className='Connect' basic>\n        <Grid centered columns={3}>\n          <Grid.Row>\n            <Grid.Column width={4}>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Container>\n                <h1>Connect</h1>\n                <h4>\n                  Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo\n                  ligula eget dolor. Aenean massa strong. Cum sociis natoque penatibus et\n                  magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis,\n                  ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa\n                  quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget,\n                </h4>\n              </Container>\n            </Grid.Column>\n            <Grid.Column width={2}>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n\n      <style jsx global>{`\n        html,body {\n          width: 100%;\n          height: 100%;\n          margin: 0px;\n          padding: 0px;\n          background-color: black; \n      }\n      `}\n      </style>\n    </div>\n  );\n}\n","module.exports = require(\"react\");","module.exports = require(\"react-plx\");","module.exports = require(\"semantic-ui-react\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAFA;AACA;AAFA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAdA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAtBA;AAwBA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA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","sourceRoot":""}